// 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –°–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤ fruits —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ["apple", "banana"] . –î–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
// —Å—Ç—Ä–æ–∫—É "orange" —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ push .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// ["apple", "banana", "orange"]

const fruits = ["apple", "banana"];
fruits.push("orange");
console.log(fruits); // ["apple", "banana", "orange"]

// 2. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ numbers = [10, 20, 30, 40] . –£–¥–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ pop .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [10, 20, 30]
numbers = [10, 20, 30, 40];
numbers.pop(3);
console.log(numbers); // [10, 20, 30]

// 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –°–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤ colors = ["blue", "green"] . –î–æ–±–∞–≤—å –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫—É "red" —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ unshift .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// ["red", "blue", "green"]
colors = ["blue", "green"];
colors.unshift("red");
console.log(colors); // ["red", "blue", "green"]

// 4. –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ days = ["Monday", "Tuesday", "Wednesday"] . –£–¥–∞–ª–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ shift .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// ["Tuesday", "Wednesday"]
days = ["Monday", "Tuesday", "Wednesday"];
days.shift(0);
console.log(days); // ["Tuesday", "Wednesday"]

// 5. –ù–∞–π–¥–∏ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ cities = ["Paris", "London", "Berlin", "Madrid"] . –ù–∞–π–¥–∏ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ "Berlin" —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ indexOf .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// 2
cities = ["Paris", "London", "Berlin", "Madrid"];
const berlinIndex = cities.indexOf("Berlin");
console.log(berlinIndex); // 2

// üîπ 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [1, 2, 3, 4] . –ü—Ä–æ–≤–µ—Ä—å, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —á–∏—Å–ª–æ 3 —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ includes .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// true
nums = [1, 2, 3, 4];
const containsThree = nums.includes(3);
console.log(containsThree); // true

// üîπ 7. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ letters = ["a", "b", "c", "d", "e"] . –ü–æ–ª—É—á–∏ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ "b", "c",
// "d" —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ slice .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// ["b", "c", "d"]
letters = ["a", "b", "c", "d", "e"];
const slicedLetters = letters.slice(1, 4); // –ò–∑–≤–ª–µ–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ 1, 2 –∏ 3 (–Ω–µ –≤–∫–ª—é—á–∞—è 4)
console.log(slicedLetters); // ["b", "c", "d"]

// 8. –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é splice
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [5, 10, 15, 20] . –£–¥–∞–ª–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–∞ 1 —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [5, 15, 20]
nums = [5, 10, 15, 20];
nums.splice(1, 1); // –£–¥–∞–ª—è–µ–º 1 —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–∞ 1
console.log(nums); // [5, 15, 20]

// üîπ 9. –í—Å—Ç–∞–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é splice
// –ó–∞–¥–∞–Ω–∏–µ:
// –í –º–∞—Å—Å–∏–≤ animals = ["cat", "dog"] –≤—Å—Ç–∞–≤—å —ç–ª–µ–º–µ–Ω—Ç "parrot" –Ω–∞ –∏–Ω–¥–µ–∫—Å 1 —Å –ø–æ–º–æ—â—å—é
// –º–µ—Ç–æ–¥–∞ splice .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// ["cat", "parrot", "dog"]
animals = ["cat", "dog"];
animals.splice(1, 0, "parrot"); // –í—Å—Ç–∞–≤–ª—è–µ–º "parrot" –Ω–∞ –∏–Ω–¥–µ–∫—Å 1
// 0 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(animals); // ["cat", "parrot", "dog"]

// 10. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —á–∏—Å–µ–ª
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ numbers = [40, 10, 100, 30] . –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π –º–∞—Å—Å–∏–≤ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ sort .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [10, 30, 40, 100]
numbers = [40, 10, 100, 30];
numbers.sort((a, b) => a - b); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
// (a - b) –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º (b - a)
console.log(numbers); // [10, 30, 40, 100]

// üîπ 11. –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ arr = [1, 2, 3, 4] . –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã —ç–ª–µ–º–µ–Ω—Ç—ã —à–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º
// –ø–æ—Ä—è–¥–∫–µ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ reverse .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [4, 3, 2, 1]
arr = [1, 2, 3, 4];
arr.reverse(); // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤
console.log(arr); // [4, 3, 2, 1]

// üîπ 12. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤
// –ó–∞–¥–∞–Ω–∏–µ:
// –°–æ–∑–¥–∞–π –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞: a = [1, 2] –∏ b = [3, 4] . –û–±—ä–µ–¥–∏–Ω–∏ –∏—Ö –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ concat .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [1, 2, 3, 4]
// concat - –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤
a = [1, 2];
b = [3, 4];
const combined = a.concat(b); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –º–∞—Å—Å–∏–≤—ã
console.log(combined); // [1, 2, 3, 4]

// 13. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ letters = ["a", "b", "c"] . –ü—Ä–µ–æ–±—Ä–∞–∑—É–π –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å —Å
// –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ join .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// "a-b-c"
letters = ["a", "b", "c"];
const joinedString = letters.join("-"); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å
console.log(joinedString); // "a-b-c"

// 14. –ü–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ arr = [1, 2, 3, 2, 1] . –ù–∞–π–¥–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ 2 —Å –ø–æ–º–æ—â—å—é
// –º–µ—Ç–æ–¥–∞ lastIndexOf .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// 3
arr = [1, 2, 3, 2, 1];
const lastIndexOfTwo = arr.lastIndexOf(2); // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ 2
// lastIndexOf - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤
// –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1
console.log(lastIndexOfTwo); // 3

// 15. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ arr = [1, 2, 3] . –£–¥–∞–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –æ–¥–Ω–æ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è pop –≤
// —Ü–∏–∫–ª–µ.
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤: []
arr = [1, 2, 3];
while (arr.length > 0) {
  // –ü–æ–∫–∞ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π
  arr.pop(); // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
}
console.log(arr); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤: []

// üîπ 16. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
// –ó–∞–¥–∞–Ω–∏–µ:
// –°–∫–æ–ø–∏—Ä—É–π –º–∞—Å—Å–∏–≤ a = [5, 10, 15] –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ b —Å –ø–æ–º–æ—â—å—é slice .
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// b = [5, 10, 15] (–Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è –∫–æ–ø–∏—è)
a = [5, 10, 15];
b = a.slice(); // –ö–æ–ø–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ a –≤ b
// slice - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
console.log(b); // [5, 10, 15]

// üîπ 17. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤
// –ó–∞–¥–∞–Ω–∏–µ:
// –°–æ–∑–¥–∞–π –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ a = [1, 2, 3] –∏ b = a.slice() . –ò–∑–º–µ–Ω–∏ b[0] –Ω–∞ 99 . –ü–æ–∫–∞–∂–∏, —á—Ç–æ a
// –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è.
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// a = [1, 2, 3] , b = [99, 2, 3]
a = [1, 2, 3];
b = a.slice(); // –ö–æ–ø–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ a –≤ b
b[0] = 99; // –ò–∑–º–µ–Ω—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ b
console.log("a:", a, "b:", b); // a: [1, 2, 3] , b: [99, 2, 3]

// 18. –ù–∞–π–¥–∏ —Å—É–º–º—É —á–∏—Å–µ–ª
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [10, 20, 30] . –ò—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª, –Ω–∞–π–¥–∏ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞.
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// 60
nums = [10, 20, 30];
let sum = 0; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É–º–º—ã
if (nums.length > 0) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π
  // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π, —Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞
  for (let i = 0; i < nums.length; i++) { // –¶–∏–∫–ª for –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è i - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
    sum += nums[i]; // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∫ —Å—É–º–º–µ
  }
}
console.log(sum); // 60

// üîπ 19. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
// –ó–∞–¥–∞–Ω–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ arr = [1, 2, 3, 4, 5, 6] . –£–¥–∞–ª–∏ –≤—Å–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞, –∏—Å–ø–æ–ª—å–∑—É—è splice –∏ —Ü–∏–∫–ª.
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// [1, 3, 5]
arr = [1, 2, 3, 4, 5, 6];
for (let i = arr.length - 1; i >= 0; i--) { // –ü—Ä–æ—Ö–æ–¥–∏–º —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞
  if (arr[i] % 2 === 0) { // –ï—Å–ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ
    arr.splice(i, 1); // –£–¥–∞–ª—è–µ–º –µ–≥–æ
  }
}
console.log(arr); // [1, 3, 5]20. –û—á–∏—Å—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ –¥–ª–∏–Ω—É

// –ó–∞–¥–∞–Ω–∏–µ: 20
// –î–∞–Ω –º–∞—Å—Å–∏–≤ arr = [1, 2, 3, 4] . –û—á–∏—Å—Ç–∏ –º–∞—Å—Å–∏–≤, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ –µ–≥–æ –¥–ª–∏–Ω—É –≤ 0.
// –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
// []
arr = [1, 2, 3, 4];
arr.length = 1; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ –≤ 0
// –≠—Ç–æ –æ—á–∏—Å—Ç–∏—Ç –º–∞—Å—Å–∏–≤
console.log(arr); // []




